<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Students Support System</title>
  <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f0f4f8;
      color: #333;
    }

    header {
      background: linear-gradient(90deg, #004d99, #0066cc);
      color: white;
      padding: 20px;
      text-align: center;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    header h1, header h2 {
      margin: 0;
    }

    .container {
      max-width: 1200px;
      margin: 30px auto;
      padding: 20px;
      background: white;
      border-radius: 10px;
      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
    }

    h3 {
      color: #004d99;
      border-bottom: 2px solid #004d99;
      padding-bottom: 5px;
    }

    .table-wrapper {
      max-height: 300px;
      overflow-y: auto;
      border: 1px solid #ddd;
      border-radius: 8px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      border: 1px solid #ddd;
      padding: 12px;
      text-align: left;
    }

    th {
      background-color: #004d99;
      color: white;
    }

    button {
      background-color: #004d99;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      padding: 10px;
      font-weight: bold;
    }

    button:hover {
      background-color: #003366;
    }

    #noteEditor {
      height: 200px;
      border: 1px solid #ddd;
      margin-bottom: 10px;
    }

    .popup {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.8);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }

    .popup-content {
      background: white;
      padding: 20px;
      border-radius: 10px;
      max-width: 600px;
      width: 100%;
      text-align: center;
      overflow: auto;
      max-height: 80%;
    }

    .calendar {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      gap: 10px;
      text-align: center;
      margin: 20px 0;
    }

    .calendar div {
      padding: 10px;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 0.8em;
    }

    .calendar .current-day {
      background: #004d99;
      color: white;
      font-weight: bold;
    }

    .timer {
      padding: 15px;
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 10px;
      text-align: center;
      margin-top: 15px;
    }

    img {
      max-width: 100%;
      border-radius: 5px;
    }
  </style>
</head>
<body>
  <header>
    <h1>Obafemi Awolowo University</h1>
    <h2>Students Support System</h2>
  </header>

  <div class="container">
    <!-- Class Scheduler -->
    <div id="schedule">
      <h3>Class Scheduler</h3>
      <div class="table-wrapper">
        <table>
          <thead>
            <tr>
              <th>Day</th>
              <th>Course</th>
              <th>Time</th>
              <th>Venue</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="timetableBody"></tbody>
        </table>
      </div>
      <h4>Add Timetable Entry</h4>
      <input type="text" id="dayInput" placeholder="Day">
      <input type="text" id="courseInput" placeholder="Course">
      <input type="text" id="timeInput" placeholder="Time">
      <input type="text" id="venueInput" placeholder="Venue">
      <button onclick="addTimetableEntry()">Add Entry</button>
    </div>

    <!-- Notes Section -->
    <div id="notes">
      <h3>Take Notes</h3>
      <div id="noteEditor"></div>
      <input type="file" id="mediaUpload" accept="image/*">
      <button onclick="saveNote()">Save Note</button>
    </div>

    <!-- Saved Notes -->
    <div id="savedNotes">
      <h3>Saved Notes</h3>
      <ul id="notesList"></ul>
    </div>

    <!-- Note Popup -->
    <div class="popup" id="notePopup">
      <div class="popup-content">
        <button onclick="closePopup()">Close</button>
        <div id="popupNoteContent"></div>
      </div>
    </div>

    <!-- Calendar Section -->
    <div id="calendar">
      <h3>Calendar</h3>
      <div class="calendar" id="weeklyCalendar"></div>
    </div>

    <!-- Timer Section -->
    <div id="timerSection">
      <div class="timer">
        Auto Timer: <span id="autoTime">0:0</span>
      </div>
      <div class="timer">
        Manual Timer: <span id="manualTime">0:0</span>
        <button onclick="startManualTimer()">Start</button>
        <button onclick="stopManualTimer()">Stop</button>
      </div>
    </div>
  </div>

  <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
  <script>
    // Initialize Quill Editor
    const quill = new Quill('#noteEditor', { theme: 'snow' });

    // Welcome Message Popup
    window.onload = function() {
      const welcomePopup = document.getElementById('notePopup');
      const popupContent = document.getElementById('popupNoteContent');
      popupContent.innerHTML = "<h3>Welcome!</h3><p>Welcome to Obafemi Awolowo University's Student Support System.</p>";
      welcomePopup.style.display = 'flex';
    };

    function closePopup() {
      document.getElementById('notePopup').style.display = 'none';
    }

    // Class Scheduler
    function loadTimetable() {
      const timetableBody = document.getElementById('timetableBody');
      const timetable = JSON.parse(localStorage.getItem('timetable')) || [];
      timetableBody.innerHTML = '';
      timetable.forEach((entry, index) => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${entry.day}</td>
          <td>${entry.course}</td>
          <td>${entry.time}</td>
          <td>${entry.venue}</td>
          <td>
            <button onclick="editTimetable(${index})">Edit</button>
            <button onclick="deleteTimetable(${index})">Delete</button>
          </td>
        `;
        timetableBody.appendChild(row);
      });
    }

    function addTimetableEntry() {
      const day = document.getElementById('dayInput').value.trim();
      const course = document.getElementById('courseInput').value.trim();
      const time = document.getElementById('timeInput').value.trim();
      const venue = document.getElementById('venueInput').value.trim();
      if (day && course && time && venue) {
        const timetable = JSON.parse(localStorage.getItem('timetable')) || [];
        timetable.push({ day, course, time, venue });
        localStorage.setItem('timetable', JSON.stringify(timetable));
        loadTimetable();
      }
    }

    function deleteTimetable(index) {
      const timetable = JSON.parse(localStorage.getItem('timetable')) || [];
      timetable.splice(index, 1);
      localStorage.setItem('timetable', JSON.stringify(timetable));
      loadTimetable();
    }

    function editTimetable(index) {
      const timetable = JSON.parse(localStorage.getItem('timetable')) || [];
      const entry = timetable[index];
      document.getElementById('dayInput').value = entry.day;
      document.getElementById('courseInput').value = entry.course;
      document.getElementById('timeInput').value = entry.time;
      document.getElementById('venueInput').value = entry.venue;
      deleteTimetable(index);
    }

    // Notes
    function loadNotes() {
      const notesList = document.getElementById('notesList');
      const notes = JSON.parse(localStorage.getItem('notes')) || [];
      notesList.innerHTML = '';
      notes.forEach((note, index) => {
        const noteItem = document.createElement('li');
        noteItem.innerHTML = `
          <p>${note.text.slice(0, 100)}...</p>
          ${note.image ? `<img src="${note.image}" alt="Uploaded Image">` : ''}
          <button onclick="editNote(${index})">Edit</button>
          <button onclick="deleteNote(${index})">Delete</button>
          <button onclick="showPopup('${note.text.replace(/'/g, "\\'")}')">View</button>
        `;
        notesList.appendChild(noteItem);
      });
    }

    function saveNote() {
      const noteText = quill.root.innerHTML.trim();
      const mediaUpload = document.getElementById('mediaUpload').files[0];
      const notes = JSON.parse(localStorage.getItem('notes')) || [];
      const reader = new FileReader();
      reader.onload = function () {
        const note = { text: noteText, image: reader.result };
        notes.push(note);
        localStorage.setItem('notes', JSON.stringify(notes));
        loadNotes();
        quill.root.innerHTML = '';
      };
      if (mediaUpload) {
        reader.readAsDataURL(mediaUpload);
      } else {
        const note = { text: noteText, image: null };
        notes.push(note);
        localStorage.setItem('notes', JSON.stringify(notes));
        loadNotes();
        quill.root.innerHTML = '';
      }
    }

    function deleteNote(index) {
      const notes = JSON.parse(localStorage.getItem('notes')) || [];
      notes.splice(index, 1);
      localStorage.setItem('notes', JSON.stringify(notes));
      loadNotes();
    }

    function editNote(index) {
      const notes = JSON.parse(localStorage.getItem('notes')) || [];
      const note = notes[index];
      quill.root.innerHTML = note.text;
      deleteNote(index);
    }

    function showPopup(content) {
      const popup = document.getElementById('notePopup');
      document.getElementById('popupNoteContent').innerHTML = content;
      popup.style.display = 'flex';
    }

    // Weekly Calendar
    function loadCalendar() {
      const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      const today = new Date();
      const calendar = document.getElementById('weeklyCalendar');
      calendar.innerHTML = '';
      days.forEach((day, index) => {
        const dateBox = document.createElement('div');
        dateBox.innerText = `${day} (${new Date(today.setDate(today.getDate() - today.getDay() + index)).toDateString()})`;
        if (index === today.getDay()) {
          dateBox.classList.add('current-day');
        }
        calendar.appendChild(dateBox);
      });
    }

    // Timer
    let autoSeconds = 0, manualSeconds = 0, manualInterval;
    setInterval(() => {
      autoSeconds++;
      const minutes = Math.floor(autoSeconds / 60);
      const seconds = autoSeconds % 60;
      document.getElementById('autoTime').innerText = `${minutes}:${seconds}`;
    }, 1000);

    function startManualTimer() {
      if (!manualInterval) {
        manualInterval = setInterval(() => {
          manualSeconds++;
          const minutes = Math.floor(manualSeconds / 60);
          const seconds = manualSeconds % 60;
          document.getElementById('manualTime').innerText = `${minutes}:${seconds}`;
        }, 1000);
      }
    }

    function stopManualTimer() {
      clearInterval(manualInterval);
      manualInterval = null;
    }

    // Load Data
    document.addEventListener('DOMContentLoaded', () => {
      loadTimetable();
      loadNotes();
      loadCalendar();
    });
  </script>
</body>
</html>
