<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student Support System</title>
  <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #eef2f7;
      color: #333;
    }

    header {
      background: linear-gradient(90deg, #4a90e2, #0055cc);
      color: white;
      padding: 15px;
      text-align: center;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    header h1, header h2 {
      margin: 5px;
    }

    .container {
      max-width: 1200px;
      margin: 20px auto;
      padding: 20px;
      background: white;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      overflow-x: hidden;
    }

    h3 {
      color: #0055cc;
      border-bottom: 2px solid #0055cc;
      padding-bottom: 5px;
    }

    .table-wrapper {
      overflow-x: auto;
      border: 1px solid #ddd;
      border-radius: 8px;
      margin-bottom: 15px;
    }

    table {
      border-collapse: collapse;
      width: 100%;
      table-layout: fixed;
    }

    th, td {
      border: 1px solid #ddd;
      padding: 6px;
      text-align: left;
      vertical-align: middle;
    }

    th {
      background-color: #0055cc;
      color: white;
    }

    select, input[type="text"], button {
      padding: 4px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 0.5rem;
      margin: 5px 0;
    }

    button {
      background-color: #0055cc;
      color: white;
      border: none;
      cursor: pointer;
    }

    button:hover {
      background-color: #003b8a;
    }

    #calendar {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      grid-gap: 10px;
      text-align: center;
      margin-top: 15px;
    }

    .day {
      background: #e7eaf3;
      border: 1px solid #ddd;
      padding: 8px;
      border-radius: 5px;
      font-size: 0.4rem;
    }

    .day.today {
      background: #0055cc;
      color: white;
      font-weight: bold;
    }

    #noteEditor {
      border: 1px solid #ddd;
      margin-bottom: 10px;
      height: 150px;
    }

    .popup {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.8);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    .popup-content {
      background: white;
      color: #333;
      padding: 20px;
      border-radius: 10px;
      max-width: 600px;
      width: 90%;
      text-align: left;
      overflow-y: auto;
      max-height: 80%;
    }

    .popup-content img {
      max-width: 100%;
      display: block;
      margin: 10px 0;
    }

    .timer {
      background: #f9f9f9;
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 10px;
      text-align: center;
      margin: 10px 0;
    }

    ul {
      padding: 0;
      list-style: none;
    }

    ul li {
      margin: 10px 0;
      padding: 10px;
      background: #f0f4fa;
      border: 1px solid #ddd;
      border-radius: 5px;
    }

    .note-actions button {
      margin-left: 10px;
    }
  </style>
</head>
<body>
  <header>
    <h1>Obafemi Awolowo University</h1>
    <h2>Student Support System</h2>
  </header>

  <div class="container">
    <!-- Welcome Popup -->
    <div id="welcomePopup" class="popup">
      <div class="popup-content">
        <h3>Welcome to the Student Support System!</h3>
        <p id="welcomeMessage"></p>
        <button onclick="closeWelcomePopup()">Close</button>
      </div>
    </div>

    <!-- Class Scheduler -->
    <div id="scheduleSection">
      <h3>Class Scheduler</h3>
      <div class="table-wrapper">
        <table>
          <thead>
            <tr>
              <th>Time</th>
              <th>Mon</th>
              <th>Tues</th>
              <th>Wed</th>
              <th>Thur</th>
              <th>Fri</th>
            </tr>
          </thead>
          <tbody id="scheduleBody">
            <!-- Dynamic content will load here -->
          </tbody>
        </table>
      </div>
      <h4>Add Schedule</h4>
      <input type="text" id="timeInput" placeholder="Time (e.g., 10:00 AM)">
      <select id="dayInput">
        <option value="">Select Day</option>
        <option value="Monday">Monday</option>
        <option value="Tuesday">Tuesday</option>
        <option value="Wednesday">Wednesday</option>
        <option value="Thursday">Thursday</option>
        <option value="Friday">Friday</option>
      </select>
      <input type="text" id="subjectInput" placeholder="Subject">
      <button onclick="addSchedule()">Add</button>
    </div>

    <!-- Notes Section -->
    <div id="notesSection">
      <h3>Notes</h3>
      <div id="noteEditor"></div>
      <input type="file" id="noteMedia" accept="image/*">
      <button onclick="saveNote()">Save Note</button>
    </div>
    <ul id="notesList"></ul>

    <!-- Calendar -->
    <div id="calendarSection">
      <h3>Weekly Calendar</h3>
      <div id="calendar"></div>
    </div>

    <!-- Timers -->
    <div id="timersSection">
      <div class="timer">
        Auto Timer: <span id="autoMinutes">0</span> mins <span id="autoSeconds">0</span> secs
      </div>
      <div class="timer">
        Manual Timer: <span id="manualMinutes">0</span> mins <span id="manualSeconds">0</span> secs
        <button onclick="startManualTimer()">Start</button>
        <button onclick="stopManualTimer()">Stop</button>
      </div>
    </div>
  </div>

  <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
  <script>
    const quill = new Quill('#noteEditor', { theme: 'snow' });

    document.addEventListener('DOMContentLoaded', () => {
      displayWelcomePopup();
      loadCalendar();
      loadSchedule();
      loadNotes();
    });

    // Welcome Popup
    function displayWelcomePopup() {
      const studentName = localStorage.getItem('studentName') || prompt("Enter your name:");
      localStorage.setItem('studentName', studentName);
      document.getElementById('welcomeMessage').textContent = `Hello, ${studentName}!`;
      document.getElementById('welcomePopup').style.display = 'flex';
    }

    function closeWelcomePopup() {
      document.getElementById('welcomePopup').style.display = 'none';
    }

    // Calendar
    function loadCalendar() {
      const calendar = document.getElementById('calendar');
      const today = new Date();
      const currentDay = today.getDay();
      const weekdays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
      weekdays.forEach((day, index) => {
        const dayDiv = document.createElement('div');
        dayDiv.className = 'day' + (index === currentDay ? ' today' : '');
        dayDiv.textContent = `${day}`;
        calendar.appendChild(dayDiv);
      });
    }

    // Schedule
    function loadSchedule() {
      const scheduleBody = document.getElementById('scheduleBody');
      const schedule = JSON.parse(localStorage.getItem('schedule')) || [];
      scheduleBody.innerHTML = schedule.map((item, index) => `
        <tr>
          <td>${item.time}</td>
          <td>${item.day === 'Monday' ? item.subject : ''}</td>
          <td>${item.day === 'Tuesday' ? item.subject : ''}</td>
          <td>${item.day === 'Wednesday' ? item.subject : ''}</td>
          <td>${item.day === 'Thursday' ? item.subject : ''}</td>
          <td>${item.day === 'Friday' ? item.subject : ''}</td>
          <td>
            <button onclick="editSchedule(${index})">Edit</button>
            <button onclick="deleteSchedule(${index})">Delete</button>
          </td>
        </tr>`).join('');
    }

    function addSchedule() {
      const time = document.getElementById('timeInput').value;
      const day = document.getElementById('dayInput').value;
      const subject = document.getElementById('subjectInput').value;
      const schedule = JSON.parse(localStorage.getItem('schedule')) || [];
      schedule.push({ time, day, subject });
      localStorage.setItem('schedule', JSON.stringify(schedule));
      document.getElementById('timeInput').value = '';
      document.getElementById('dayInput').value = '';
      document.getElementById('subjectInput').value = '';
      loadSchedule();
    }

    function deleteSchedule(index) {
      const schedule = JSON.parse(localStorage.getItem('schedule')) || [];
      schedule.splice(index, 1);
      localStorage.setItem('schedule', JSON.stringify(schedule));
      loadSchedule();
    }

    function editSchedule(index) {
      const schedule = JSON.parse(localStorage.getItem('schedule')) || [];
      const item = schedule[index];
      document.getElementById('timeInput').value = item.time;
      document.getElementById('dayInput').value = item.day;
      document.getElementById('subjectInput').value = item.subject;
      deleteSchedule(index);
    }

    // Notes
    function loadNotes() {
      const notesList = document.getElementById('notesList');
      const notes = JSON.parse(localStorage.getItem('notes')) || [];
      notesList.innerHTML = notes.map((note, index) => `
        <li>
          <p>${note.text}</p>
          <img src="${note.media}" alt="Note Media" style="max-width:100%;">
          <div class="note-actions">
            <button onclick="editNote(${index})">Edit</button>
            <button onclick="deleteNote(${index})">Delete</button>
          </div>
        </li>`).join('');
    }

    function saveNote() {
      const text = quill.root.innerHTML;
      const mediaInput = document.getElementById('noteMedia').files[0];
      const reader = new FileReader();
      reader.onload = () => {
        const notes = JSON.parse(localStorage.getItem('notes')) || [];
        notes.push({ text, media: reader.result });
        localStorage.setItem('notes', JSON.stringify(notes));
        quill.root.innerHTML = '';
        document.getElementById('noteMedia').value = '';
        loadNotes();
      };
      if (mediaInput) reader.readAsDataURL(mediaInput);
    }

    function deleteNote(index) {
      const notes = JSON.parse(localStorage.getItem('notes')) || [];
      notes.splice(index, 1);
      localStorage.setItem('notes', JSON.stringify(notes));
      loadNotes();
    }

    function editNote(index) {
      const notes = JSON.parse(localStorage.getItem('notes')) || [];
      const note = notes[index];
      quill.root.innerHTML = note.text;
      deleteNote(index);
    }

    // Timer
    let autoSeconds = 0, autoMinutes = 0, manualSeconds = 0, manualMinutes = 0, manualInterval;

    setInterval(() => {
      autoSeconds++;
      if (autoSeconds === 60) {
        autoSeconds = 0;
        autoMinutes++;
      }
      document.getElementById('autoSeconds').textContent = autoSeconds;
      document.getElementById('autoMinutes').textContent = autoMinutes;
    }, 1000);

    function startManualTimer() {
      manualInterval = setInterval(() => {
        manualSeconds++;
        if (manualSeconds === 60) {
          manualSeconds = 0;
          manualMinutes++;
        }
        document.getElementById('manualSeconds').textContent = manualSeconds;
        document.getElementById('manualMinutes').textContent = manualMinutes;
      }, 1000);
    }

    function stopManualTimer() {
      clearInterval(manualInterval);
    }
  </script>
</body>
</html>
